$date
	Mon Nov  1 15:50:12 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_simple_CPU $end
$var reg 1 ! clk $end
$var reg 20 " instruction [19:0] $end
$var reg 1 # rst $end
$scope module SCPU_DUT $end
$var wire 1 ! clk $end
$var wire 8 $ data_in_i [7:0] $end
$var wire 20 % instruction [19:0] $end
$var wire 8 & operand_a_i [7:0] $end
$var wire 1 # rst $end
$var wire 1 ' wen_i $end
$var wire 1 ( sel3_i $end
$var wire 1 ) sel1_i $end
$var wire 8 * result2_i [7:0] $end
$var wire 8 + result1_i [7:0] $end
$var wire 8 , operand_b_i [7:0] $end
$var wire 8 - operand_2_i [7:0] $end
$var wire 8 . operand_1_i [7:0] $end
$var wire 4 / opcode_i [3:0] $end
$var wire 8 0 offset_i [7:0] $end
$var wire 8 1 data_out_i [7:0] $end
$scope module CU1 $end
$var wire 1 ! clk $end
$var wire 20 2 instr [19:0] $end
$var wire 8 3 result2 [7:0] $end
$var wire 1 # rst $end
$var reg 20 4 instruction [19:0] $end
$var reg 8 5 offset [7:0] $end
$var reg 4 6 opcode [3:0] $end
$var reg 8 7 operand1 [7:0] $end
$var reg 8 8 operand2 [7:0] $end
$var reg 1 ) sel1 $end
$var reg 1 ( sel3 $end
$var reg 4 9 state [3:0] $end
$var reg 1 ' w_r $end
$upscope $end
$scope module alu1 $end
$var wire 1 ! clk $end
$var wire 4 : opcode [3:0] $end
$var wire 8 ; operand_a [7:0] $end
$var wire 8 < operand_b [7:0] $end
$var reg 8 = result [7:0] $end
$upscope $end
$scope module data_memory $end
$var wire 5 > addr [4:0] $end
$var wire 1 ! clk $end
$var wire 8 ? data_in [7:0] $end
$var wire 1 ' wen $end
$var reg 8 @ data_out [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx @
bx ?
bx >
bx =
bx <
bx ;
b1111 :
b0 9
bx 8
bx 7
b1111 6
bx 5
b0 4
bx 3
b0 2
bx 1
bx 0
b1111 /
bx .
bx -
bx ,
bx +
bx *
0)
0(
0'
bx &
b0 %
bx $
1#
b0 "
1!
$end
#1000
0!
#2000
1!
#3000
0#
0!
#4000
1!
#5000
b1000111000000000000 "
b1000111000000000000 %
b1000111000000000000 2
0!
#6000
b1 9
b1000111000000000000 4
1!
#7000
0!
#8000
b11 ,
b11 <
1)
b0 /
b0 6
b0 :
b0 0
b0 5
b11 $
b11 ?
b11 -
b11 8
b1 &
b1 ;
b1 .
b1 7
b10 9
1!
#9000
0!
#10000
b100 *
b100 3
b100 >
b100 +
b100 =
b11 $
b11 ?
b11 -
b11 8
b1 &
b1 ;
b1 .
b1 7
b1000 9
1!
#11000
0!
#12000
b11 $
b11 ?
b11 -
b11 8
b1 &
b1 ;
b1 .
b1 7
b1 9
1!
#13000
b1010011000000000000 "
b1010011000000000000 %
b1010011000000000000 2
0!
#14000
b11 $
b11 ?
b11 -
b11 8
b100 &
b100 ;
b100 .
b100 7
b10 9
b1010011000000000000 4
1!
#15000
0!
#16000
b111 *
b111 3
b111 >
b111 +
b111 =
b1000 9
1!
#17000
0!
#18000
b1 9
1!
#19000
b1110010000000000001 "
b1110010000000000001 %
b1110010000000000001 2
0!
#20000
b10 ,
b10 <
b1 /
b1 6
b1 :
b10 $
b10 ?
b10 -
b10 8
b10 9
b1110010000000000001 4
1!
#21000
0!
#22000
b10 *
b10 3
b10 >
b10 +
b10 =
b1000 9
1!
#23000
0!
#24000
b1 9
1!
#25000
b11011000000011110000 "
b11011000000011110000 %
b11011000000011110000 2
0!
#26000
bx *
bx 3
b1111 ,
b1111 <
1(
0)
b0 /
b0 6
b0 :
b1111 0
b1111 5
b111 $
b111 ?
b111 -
b111 8
b10 &
b10 ;
b10 .
b10 7
b10 9
b11011000000011110000 4
1!
#27000
0!
#28000
b10001 >
b10001 +
b10001 =
1'
b100 9
1!
#29000
0!
#30000
b1 9
1!
#31000
b11001100000101100000 "
b11001100000101100000 %
b11001100000101100000 2
0!
#32000
b10110 ,
b10110 <
0'
b10110 0
b10110 5
b100 $
b100 ?
b100 -
b100 8
b10 9
b11001100000101100000 4
1!
#33000
0!
#34000
b111 *
b111 3
b11000 >
1'
b111 1
b111 @
b11000 +
b11000 =
b100 9
1!
#35000
0!
#36000
b1 9
1!
#37000
b10111000000011110000 "
b10111000000011110000 %
b10111000000011110000 2
0!
#38000
b1111 ,
b1111 <
b0 *
b0 3
0'
b1111 0
b1111 5
b10 $
b10 ?
b10 -
b10 8
b0 1
b0 @
b10 9
b10111000000011110000 4
1!
#39000
0!
#40000
b10001 >
b100 *
b100 3
b10001 +
b10001 =
b100 1
b100 @
b1000 9
1!
#41000
0!
#42000
b111 *
b111 3
b111 1
b111 @
b1 9
1!
#43000
0!
#44000
b100 $
b100 ?
b100 -
b100 8
b111 1
b111 @
b10 9
1!
#46000
b0 *
b0 3
b0 1
b0 @
